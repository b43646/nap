apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: nginx-ingress
    meta.helm.sh/release-namespace: nginx-ingress
  creationTimestamp: "2021-02-05T14:38:31Z"
  labels:
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx-ingress-nginx-ingress
    helm.sh/chart: nginx-ingress-0.8.0
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:helm.sh/chart: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":80,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:nodePort: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":443,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:nodePort: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:app: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: Go-http-client
    operation: Update
    time: "2021-02-05T14:38:31Z"
  name: nginx-ingress-nginx-ingress
  namespace: nginx-ingress
  resourceVersion: "1514877"
  selfLink: /api/v1/namespaces/nginx-ingress/services/nginx-ingress-nginx-ingress
  uid: 66e59314-f17e-443a-a6cb-5f9460e6f5bb
spec:
  clusterIP: 10.98.208.134
  externalTrafficPolicy: Local
  ports:
  - name: http
    nodePort: 30274
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 30275
    port: 443
    protocol: TCP
    targetPort: 443
  - name: plus-dashboard
    nodePort: 30080
    port: 8080
    protocol: TCP
    targetPort: plus-dashboard    
  selector:
    app: nginx-ingress-nginx-ingress
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
